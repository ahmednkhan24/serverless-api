name: Deploy to PROD

on:
  push:
    branches: [main]
    paths:
      - 'src/**/*.ts'
      - 'template.env.yaml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies using yarn
        run: yarn install
      - name: Check for TypeScript compiler errors
        run: yarn typecheck
      - name: Execute unit tests
        run: yarn test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Compile code
        run: |
          yarn install
          tsc -p tsconfig.prod.json
          sh scripts/postcompile.sh
      - name: Build artifact
        run: |
          aws sts get-caller-identity
          sed -e 's/{DEPLOYMENT_ENVIRONMENT}/prod/g' template.env.yaml > template.yaml
          sam validate
          sam build
      - name: Deploy artifact
        run: |
          sam deploy \
          --region us-east-2 \
          --stack-name serverless-api-prod \
          --capabilities CAPABILITY_IAM \
          --resolve-s3
